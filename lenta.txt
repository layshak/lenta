#include <GyverRGB.h> 
#include <GyverEncoder.h> 
 
// Пины подключения RGB-ленты 
#define PIN_R 9 
#define PIN_G 10 
#define PIN_B 3 
 
// Пины энкодера 
#define CLK 4 
#define DT 5 
#define SW 6 
 
Encoder enc(CLK, DT, SW); // Инициализация энкодера 
GRGB strip(PIN_R, PIN_G, PIN_B); // Инициализация RGB-ленты 
 
// Глобальные переменные 
uint8_t mode = 0;          // Текущий режим: 0 - цвет, 1 - яркость, 2 - цветовое колесо, 3 - управление яркостью 
uint16_t hue = 0;          // Текущий оттенок (0-360) 
uint8_t brightness = 128;  // Текущая яркость (0-255) 
uint32_t lastUpdate = 0;   // Время последнего обновления цвета в режиме 3 
const uint16_t wheelSpeed = 50; // Интервал обновления цвета (мс) для режима 3 
 
void setup() { 
  strip.setBrightness(brightness);   // Устанавливаем начальную яркость 
  strip.setHSV(hue, 255, brightness); // Устанавливаем начальный цвет 
  enc.setType(TYPE2); // Устанавливаем тип энкодера 
} 
 
void loop() { 
  enc.tick(); // Опрос энкодера 
 
  // Переключение режима при нажатии кнопки 
  if (enc.isClick()) { 
    mode = (mode + 1) % 4; // Переключаем режим (0, 1, 2, 3) 
  } 
 
  // Управление параметрами в зависимости от режима 
  if (enc.isTurn()) { 
    if (mode == 0) { 
      // Режим 0: круговое колесо цвета вручную 
      if (enc.isRight()) { 
        hue = (hue + 5) % 360; // Увеличиваем оттенок 
      } else if (enc.isLeft()) { 
        hue = (hue + 360 - 5) % 360; // Уменьшаем оттенок 
      } 
      strip.setHSV(hue, 255, brightness); 
    } else if (mode == 1) { 
      // Режим 1: регулировка яркости 
      if (enc.isRight()) { 
        brightness = min(brightness + 5, 255); 
      } else if (enc.isLeft()) { 
        brightness = max(brightness - 5, 0); 
      } 
      strip.setBrightness(brightness); 
      strip.setHSV(hue, 255, brightness); 
    } else if (mode == 3) { 
      // Режим 3: регулировка яркости вручную (аналог режима 1) 
      if (enc.isRight()) { 
        brightness = min(brightness + 5, 255); 
      } else if (enc.isLeft()) { 
        brightness = max(brightness - 5, 0); 
      } 
      strip.setBrightness(brightness); 
    } 
  } 
 
  // Режим 2: цветовое колесо с постоянной скоростью 
  if (mode == 2) { 
    uint32_t currentTime = millis(); 
    if (currentTime - lastUpdate >= wheelSpeed) { 
      lastUpdate = currentTime; 
      hue = (hue + 1) % 360; // Постепенное увеличение оттенка 
      strip.setHSV(hue, 255, brightness); 
    } 
  } 
}
